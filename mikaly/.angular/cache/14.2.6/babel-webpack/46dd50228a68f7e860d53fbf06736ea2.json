{"ast":null,"code":"import { InjectionToken, ɵglobal, Injectable, Inject, Injector, NgZone, NgModule } from '@angular/core';\nimport { Store, getActionTypeFromInstance, NGXS_PLUGINS } from '@ngxs/store';\nimport { catchError, tap } from 'rxjs/operators';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Interface for the redux-devtools-extension API.\n * @record\n */\n\nimport * as ɵngcc0 from '@angular/core';\n\nfunction NgxsDevtoolsExtension() {}\n\nif (false) {\n  /**\n   * @param {?} state\n   * @return {?}\n   */\n  NgxsDevtoolsExtension.prototype.init = function (state) {};\n  /**\n   * @param {?} action\n   * @param {?=} state\n   * @return {?}\n   */\n\n\n  NgxsDevtoolsExtension.prototype.send = function (action, state) {};\n  /**\n   * @param {?} fn\n   * @return {?}\n   */\n\n\n  NgxsDevtoolsExtension.prototype.subscribe = function (fn) {};\n}\n/**\n * @record\n */\n\n\nfunction NgxsDevtoolsAction() {}\n\nif (false) {\n  /** @type {?} */\n  NgxsDevtoolsAction.prototype.type;\n  /** @type {?} */\n\n  NgxsDevtoolsAction.prototype.payload;\n  /** @type {?} */\n\n  NgxsDevtoolsAction.prototype.state;\n  /** @type {?} */\n\n  NgxsDevtoolsAction.prototype.id;\n  /** @type {?} */\n\n  NgxsDevtoolsAction.prototype.source;\n}\n/**\n * @record\n */\n\n\nfunction NgxsDevtoolsOptions() {}\n\nif (false) {\n  /**\n   * The name of the extension\n   * @type {?|undefined}\n   */\n  NgxsDevtoolsOptions.prototype.name;\n  /**\n   * Whether the dev tools is enabled or note. Useful for setting during production.\n   * @type {?|undefined}\n   */\n\n  NgxsDevtoolsOptions.prototype.disabled;\n  /**\n   * Max number of entiries to keep.\n   * @type {?|undefined}\n   */\n\n  NgxsDevtoolsOptions.prototype.maxAge;\n  /**\n   * Reformat actions before sending to dev tools\n   * @type {?|undefined}\n   */\n\n  NgxsDevtoolsOptions.prototype.actionSanitizer;\n  /**\n   * Reformat state before sending to devtools\n   * @type {?|undefined}\n   */\n\n  NgxsDevtoolsOptions.prototype.stateSanitizer;\n}\n/** @type {?} */\n\n\nconst NGXS_DEVTOOLS_OPTIONS = new InjectionToken('NGXS_DEVTOOLS_OPTIONS');\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @enum {string} */\n\nconst ReduxDevtoolsActionType = {\n  Dispatch: 'DISPATCH',\n  Action: 'ACTION'\n};\n/** @enum {string} */\n\nconst ReduxDevtoolsPayloadType = {\n  JumpToAction: 'JUMP_TO_ACTION',\n  JumpToState: 'JUMP_TO_STATE',\n  ToggleAction: 'TOGGLE_ACTION',\n  ImportState: 'IMPORT_STATE'\n};\n/**\n * Adds support for the Redux Devtools extension:\n * http://extension.remotedev.io/\n */\n\nclass NgxsReduxDevtoolsPlugin {\n  /**\n   * @param {?} _options\n   * @param {?} _injector\n   * @param {?} _ngZone\n   */\n  constructor(_options, _injector, _ngZone) {\n    this._options = _options;\n    this._injector = _injector;\n    this._ngZone = _ngZone;\n    this.devtoolsExtension = null;\n    this.globalDevtools = ɵglobal['__REDUX_DEVTOOLS_EXTENSION__'] || ɵglobal['devToolsExtension'];\n    this.unsubscribe = null;\n    this.connect();\n  }\n  /**\n   * @return {?}\n   */\n\n\n  ngOnDestroy() {\n    if (this.unsubscribe !== null) {\n      this.unsubscribe();\n    }\n\n    if (this.globalDevtools) {\n      this.globalDevtools.disconnect();\n    }\n  }\n  /**\n   * Lazy get the store for circular dependency issues\n   * @private\n   * @return {?}\n   */\n\n\n  get store() {\n    return this._injector.get(Store);\n  }\n  /**\n   * Middleware handle function\n   * @param {?} state\n   * @param {?} action\n   * @param {?} next\n   * @return {?}\n   */\n\n\n  handle(state, action, next) {\n    if (!this.devtoolsExtension || this._options.disabled) {\n      return next(state, action);\n    }\n\n    return next(state, action).pipe(catchError(\n    /**\n    * @param {?} error\n    * @return {?}\n    */\n    error => {\n      /** @type {?} */\n      const newState = this.store.snapshot();\n      this.sendToDevTools(state, action, newState);\n      throw error;\n    }), tap(\n    /**\n    * @param {?} newState\n    * @return {?}\n    */\n    newState => {\n      this.sendToDevTools(state, action, newState);\n    }));\n  }\n  /**\n   * @private\n   * @param {?} state\n   * @param {?} action\n   * @param {?} newState\n   * @return {?}\n   */\n\n\n  sendToDevTools(state, action, newState) {\n    /** @type {?} */\n    const type = getActionTypeFromInstance(action); // if init action, send initial state to dev tools\n\n    /** @type {?} */\n\n    const isInitAction = type === '@@INIT';\n\n    if (isInitAction) {\n      /** @type {?} */\n      this.devtoolsExtension.init(state);\n    } else {\n      /** @type {?} */\n      this.devtoolsExtension.send(Object.assign({}, action, {\n        action: null,\n        type\n      }), newState);\n    }\n  }\n  /**\n   * Handle the action from the dev tools subscription\n   * @param {?} action\n   * @return {?}\n   */\n\n\n  dispatched(action) {\n    if (action.type === \"DISPATCH\"\n    /* Dispatch */\n    ) {\n      if (action.payload.type === \"JUMP_TO_ACTION\"\n      /* JumpToAction */\n      || action.payload.type === \"JUMP_TO_STATE\"\n      /* JumpToState */\n      ) {\n        /** @type {?} */\n        const prevState = JSON.parse(action.state); // This makes the DevTools and Router plugins friends with each other.\n        // We're checking for the `router` state to exist, and it also should\n        // have the `trigger` property, so we're sure that this is our router\n        // state (coming from `@ngxs/router-plugin`). This enables a time-traveling\n        // feature since it doesn't only restore the state but also allows the `RouterState`\n        // to navigate back when the action is jumped.\n\n        if (prevState.router && prevState.router.trigger) {\n          prevState.router.trigger = 'devtools';\n        }\n\n        this.store.reset(prevState);\n      } else if (action.payload.type === \"TOGGLE_ACTION\"\n      /* ToggleAction */\n      ) {\n        console.warn('Skip is not supported at this time.');\n      } else if (action.payload.type === \"IMPORT_STATE\"\n      /* ImportState */\n      ) {\n        const {\n          actionsById,\n          computedStates,\n          currentStateIndex\n        } = action.payload.nextLiftedState;\n\n        /** @type {?} */\n        this.devtoolsExtension.init(computedStates[0].state);\n        Object.keys(actionsById).filter(\n        /**\n        * @param {?} actionId\n        * @return {?}\n        */\n        actionId => actionId !== '0').forEach(\n        /**\n        * @param {?} actionId\n        * @return {?}\n        */\n        actionId =>\n        /** @type {?} */\n        this.devtoolsExtension.send(actionsById[actionId], computedStates[actionId].state));\n        this.store.reset(computedStates[currentStateIndex].state);\n      }\n    } else if (action.type === \"ACTION\"\n    /* Action */\n    ) {\n      /** @type {?} */\n      const actionPayload = JSON.parse(action.payload);\n      this.store.dispatch(actionPayload);\n    }\n  }\n  /**\n   * @private\n   * @return {?}\n   */\n\n\n  connect() {\n    if (!this.globalDevtools || this._options.disabled) {\n      return;\n    } // The `connect` method adds `message` event listener since it communicates\n    // with an extension through `window.postMessage` and message events.\n    // We handle only 2 events; thus, we don't want to run many change detections\n    // because the extension sends events that we don't have to handle.\n\n\n    this.devtoolsExtension = this._ngZone.runOutsideAngular(\n    /**\n    * @return {?}\n    */\n    () =>\n    /** @type {?} */\n    this.globalDevtools.connect(this._options));\n    this.unsubscribe = this.devtoolsExtension.subscribe(\n    /**\n    * @param {?} action\n    * @return {?}\n    */\n    action => {\n      if (action.type === \"DISPATCH\"\n      /* Dispatch */\n      || action.type === \"ACTION\"\n      /* Action */\n      ) {\n        this._ngZone.run(\n        /**\n        * @return {?}\n        */\n        () => {\n          this.dispatched(action);\n        });\n      }\n    });\n  }\n\n}\n\nNgxsReduxDevtoolsPlugin.ɵfac = function NgxsReduxDevtoolsPlugin_Factory(t) {\n  return new (t || NgxsReduxDevtoolsPlugin)(ɵngcc0.ɵɵinject(NGXS_DEVTOOLS_OPTIONS), ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(ɵngcc0.NgZone));\n};\n\nNgxsReduxDevtoolsPlugin.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: NgxsReduxDevtoolsPlugin,\n  factory: NgxsReduxDevtoolsPlugin.ɵfac\n});\n/** @nocollapse */\n\nNgxsReduxDevtoolsPlugin.ctorParameters = () => [{\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [NGXS_DEVTOOLS_OPTIONS]\n  }]\n}, {\n  type: Injector\n}, {\n  type: NgZone\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgxsReduxDevtoolsPlugin, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [NGXS_DEVTOOLS_OPTIONS]\n      }]\n    }, {\n      type: ɵngcc0.Injector\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, null);\n})();\n\nif (false) {\n  /**\n   * @type {?}\n   * @private\n   */\n  NgxsReduxDevtoolsPlugin.prototype.devtoolsExtension;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NgxsReduxDevtoolsPlugin.prototype.globalDevtools;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NgxsReduxDevtoolsPlugin.prototype.unsubscribe;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NgxsReduxDevtoolsPlugin.prototype._options;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NgxsReduxDevtoolsPlugin.prototype._injector;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NgxsReduxDevtoolsPlugin.prototype._ngZone;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?} options\n * @return {?}\n */\n\n\nfunction devtoolsOptionsFactory(options) {\n  return Object.assign({\n    name: 'NGXS'\n  }, options);\n}\n/** @type {?} */\n\n\nconst USER_OPTIONS = new InjectionToken('USER_OPTIONS');\n\nclass NgxsReduxDevtoolsPluginModule {\n  /**\n   * @param {?=} options\n   * @return {?}\n   */\n  static forRoot(options) {\n    return {\n      ngModule: NgxsReduxDevtoolsPluginModule,\n      providers: [{\n        provide: NGXS_PLUGINS,\n        useClass: NgxsReduxDevtoolsPlugin,\n        multi: true\n      }, {\n        provide: USER_OPTIONS,\n        useValue: options\n      }, {\n        provide: NGXS_DEVTOOLS_OPTIONS,\n        useFactory: devtoolsOptionsFactory,\n        deps: [USER_OPTIONS]\n      }]\n    };\n  }\n\n}\n\nNgxsReduxDevtoolsPluginModule.ɵfac = function NgxsReduxDevtoolsPluginModule_Factory(t) {\n  return new (t || NgxsReduxDevtoolsPluginModule)();\n};\n\nNgxsReduxDevtoolsPluginModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: NgxsReduxDevtoolsPluginModule\n});\nNgxsReduxDevtoolsPluginModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgxsReduxDevtoolsPluginModule, [{\n    type: NgModule\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nexport { NGXS_DEVTOOLS_OPTIONS, NgxsReduxDevtoolsPlugin, NgxsReduxDevtoolsPluginModule, devtoolsOptionsFactory as ɵa, USER_OPTIONS as ɵb };","map":{"version":3,"names":["InjectionToken","ɵglobal","Injectable","Inject","Injector","NgZone","NgModule","Store","getActionTypeFromInstance","NGXS_PLUGINS","catchError","tap","ɵngcc0","NgxsDevtoolsExtension","prototype","init","state","send","action","subscribe","fn","NgxsDevtoolsAction","type","payload","id","source","NgxsDevtoolsOptions","name","disabled","maxAge","actionSanitizer","stateSanitizer","NGXS_DEVTOOLS_OPTIONS","ReduxDevtoolsActionType","Dispatch","Action","ReduxDevtoolsPayloadType","JumpToAction","JumpToState","ToggleAction","ImportState","NgxsReduxDevtoolsPlugin","constructor","_options","_injector","_ngZone","devtoolsExtension","globalDevtools","unsubscribe","connect","ngOnDestroy","disconnect","store","get","handle","next","pipe","error","newState","snapshot","sendToDevTools","isInitAction","Object","assign","dispatched","prevState","JSON","parse","router","trigger","reset","console","warn","actionsById","computedStates","currentStateIndex","nextLiftedState","keys","filter","actionId","forEach","actionPayload","dispatch","runOutsideAngular","run","ɵfac","NgxsReduxDevtoolsPlugin_Factory","t","ɵɵinject","ɵprov","ɵɵdefineInjectable","token","factory","ctorParameters","undefined","decorators","args","ngDevMode","ɵsetClassMetadata","devtoolsOptionsFactory","options","USER_OPTIONS","NgxsReduxDevtoolsPluginModule","forRoot","ngModule","providers","provide","useClass","multi","useValue","useFactory","deps","NgxsReduxDevtoolsPluginModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","ɵa","ɵb"],"sources":["C:/Users/jogas/OneDrive/Bureau/mikaly/mikaly/node_modules/@ngxs/devtools-plugin/__ivy_ngcc__/fesm2015/ngxs-devtools-plugin.js"],"sourcesContent":["import { InjectionToken, ɵglobal, Injectable, Inject, Injector, NgZone, NgModule } from '@angular/core';\nimport { Store, getActionTypeFromInstance, NGXS_PLUGINS } from '@ngxs/store';\nimport { catchError, tap } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Interface for the redux-devtools-extension API.\n * @record\n */\nimport * as ɵngcc0 from '@angular/core';\nfunction NgxsDevtoolsExtension() { }\nif (false) {\n    /**\n     * @param {?} state\n     * @return {?}\n     */\n    NgxsDevtoolsExtension.prototype.init = function (state) { };\n    /**\n     * @param {?} action\n     * @param {?=} state\n     * @return {?}\n     */\n    NgxsDevtoolsExtension.prototype.send = function (action, state) { };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NgxsDevtoolsExtension.prototype.subscribe = function (fn) { };\n}\n/**\n * @record\n */\nfunction NgxsDevtoolsAction() { }\nif (false) {\n    /** @type {?} */\n    NgxsDevtoolsAction.prototype.type;\n    /** @type {?} */\n    NgxsDevtoolsAction.prototype.payload;\n    /** @type {?} */\n    NgxsDevtoolsAction.prototype.state;\n    /** @type {?} */\n    NgxsDevtoolsAction.prototype.id;\n    /** @type {?} */\n    NgxsDevtoolsAction.prototype.source;\n}\n/**\n * @record\n */\nfunction NgxsDevtoolsOptions() { }\nif (false) {\n    /**\n     * The name of the extension\n     * @type {?|undefined}\n     */\n    NgxsDevtoolsOptions.prototype.name;\n    /**\n     * Whether the dev tools is enabled or note. Useful for setting during production.\n     * @type {?|undefined}\n     */\n    NgxsDevtoolsOptions.prototype.disabled;\n    /**\n     * Max number of entiries to keep.\n     * @type {?|undefined}\n     */\n    NgxsDevtoolsOptions.prototype.maxAge;\n    /**\n     * Reformat actions before sending to dev tools\n     * @type {?|undefined}\n     */\n    NgxsDevtoolsOptions.prototype.actionSanitizer;\n    /**\n     * Reformat state before sending to devtools\n     * @type {?|undefined}\n     */\n    NgxsDevtoolsOptions.prototype.stateSanitizer;\n}\n/** @type {?} */\nconst NGXS_DEVTOOLS_OPTIONS = new InjectionToken('NGXS_DEVTOOLS_OPTIONS');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @enum {string} */\nconst ReduxDevtoolsActionType = {\n    Dispatch: 'DISPATCH',\n    Action: 'ACTION',\n};\n/** @enum {string} */\nconst ReduxDevtoolsPayloadType = {\n    JumpToAction: 'JUMP_TO_ACTION',\n    JumpToState: 'JUMP_TO_STATE',\n    ToggleAction: 'TOGGLE_ACTION',\n    ImportState: 'IMPORT_STATE',\n};\n/**\n * Adds support for the Redux Devtools extension:\n * http://extension.remotedev.io/\n */\nclass NgxsReduxDevtoolsPlugin {\n    /**\n     * @param {?} _options\n     * @param {?} _injector\n     * @param {?} _ngZone\n     */\n    constructor(_options, _injector, _ngZone) {\n        this._options = _options;\n        this._injector = _injector;\n        this._ngZone = _ngZone;\n        this.devtoolsExtension = null;\n        this.globalDevtools = ɵglobal['__REDUX_DEVTOOLS_EXTENSION__'] || ɵglobal['devToolsExtension'];\n        this.unsubscribe = null;\n        this.connect();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this.unsubscribe !== null) {\n            this.unsubscribe();\n        }\n        if (this.globalDevtools) {\n            this.globalDevtools.disconnect();\n        }\n    }\n    /**\n     * Lazy get the store for circular dependency issues\n     * @private\n     * @return {?}\n     */\n    get store() {\n        return this._injector.get(Store);\n    }\n    /**\n     * Middleware handle function\n     * @param {?} state\n     * @param {?} action\n     * @param {?} next\n     * @return {?}\n     */\n    handle(state, action, next) {\n        if (!this.devtoolsExtension || this._options.disabled) {\n            return next(state, action);\n        }\n        return next(state, action).pipe(catchError((/**\n         * @param {?} error\n         * @return {?}\n         */\n        error => {\n            /** @type {?} */\n            const newState = this.store.snapshot();\n            this.sendToDevTools(state, action, newState);\n            throw error;\n        })), tap((/**\n         * @param {?} newState\n         * @return {?}\n         */\n        newState => {\n            this.sendToDevTools(state, action, newState);\n        })));\n    }\n    /**\n     * @private\n     * @param {?} state\n     * @param {?} action\n     * @param {?} newState\n     * @return {?}\n     */\n    sendToDevTools(state, action, newState) {\n        /** @type {?} */\n        const type = getActionTypeFromInstance(action);\n        // if init action, send initial state to dev tools\n        /** @type {?} */\n        const isInitAction = type === '@@INIT';\n        if (isInitAction) {\n            (/** @type {?} */ (this.devtoolsExtension)).init(state);\n        }\n        else {\n            (/** @type {?} */ (this.devtoolsExtension)).send(Object.assign({}, action, { action: null, type }), newState);\n        }\n    }\n    /**\n     * Handle the action from the dev tools subscription\n     * @param {?} action\n     * @return {?}\n     */\n    dispatched(action) {\n        if (action.type === \"DISPATCH\" /* Dispatch */) {\n            if (action.payload.type === \"JUMP_TO_ACTION\" /* JumpToAction */ ||\n                action.payload.type === \"JUMP_TO_STATE\" /* JumpToState */) {\n                /** @type {?} */\n                const prevState = JSON.parse(action.state);\n                // This makes the DevTools and Router plugins friends with each other.\n                // We're checking for the `router` state to exist, and it also should\n                // have the `trigger` property, so we're sure that this is our router\n                // state (coming from `@ngxs/router-plugin`). This enables a time-traveling\n                // feature since it doesn't only restore the state but also allows the `RouterState`\n                // to navigate back when the action is jumped.\n                if (prevState.router && prevState.router.trigger) {\n                    prevState.router.trigger = 'devtools';\n                }\n                this.store.reset(prevState);\n            }\n            else if (action.payload.type === \"TOGGLE_ACTION\" /* ToggleAction */) {\n                console.warn('Skip is not supported at this time.');\n            }\n            else if (action.payload.type === \"IMPORT_STATE\" /* ImportState */) {\n                const { actionsById, computedStates, currentStateIndex } = action.payload.nextLiftedState;\n                (/** @type {?} */ (this.devtoolsExtension)).init(computedStates[0].state);\n                Object.keys(actionsById)\n                    .filter((/**\n                 * @param {?} actionId\n                 * @return {?}\n                 */\n                actionId => actionId !== '0'))\n                    .forEach((/**\n                 * @param {?} actionId\n                 * @return {?}\n                 */\n                actionId => (/** @type {?} */ (this.devtoolsExtension)).send(actionsById[actionId], computedStates[actionId].state)));\n                this.store.reset(computedStates[currentStateIndex].state);\n            }\n        }\n        else if (action.type === \"ACTION\" /* Action */) {\n            /** @type {?} */\n            const actionPayload = JSON.parse(action.payload);\n            this.store.dispatch(actionPayload);\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    connect() {\n        if (!this.globalDevtools || this._options.disabled) {\n            return;\n        }\n        // The `connect` method adds `message` event listener since it communicates\n        // with an extension through `window.postMessage` and message events.\n        // We handle only 2 events; thus, we don't want to run many change detections\n        // because the extension sends events that we don't have to handle.\n        this.devtoolsExtension = this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => (/** @type {?} */ (this.globalDevtools.connect(this._options)))));\n        this.unsubscribe = this.devtoolsExtension.subscribe((/**\n         * @param {?} action\n         * @return {?}\n         */\n        action => {\n            if (action.type === \"DISPATCH\" /* Dispatch */ ||\n                action.type === \"ACTION\" /* Action */) {\n                this._ngZone.run((/**\n                 * @return {?}\n                 */\n                () => {\n                    this.dispatched(action);\n                }));\n            }\n        }));\n    }\n}\nNgxsReduxDevtoolsPlugin.ɵfac = function NgxsReduxDevtoolsPlugin_Factory(t) { return new (t || NgxsReduxDevtoolsPlugin)(ɵngcc0.ɵɵinject(NGXS_DEVTOOLS_OPTIONS), ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\nNgxsReduxDevtoolsPlugin.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: NgxsReduxDevtoolsPlugin, factory: NgxsReduxDevtoolsPlugin.ɵfac });\n/** @nocollapse */\nNgxsReduxDevtoolsPlugin.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [NGXS_DEVTOOLS_OPTIONS,] }] },\n    { type: Injector },\n    { type: NgZone }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgxsReduxDevtoolsPlugin, [{\n        type: Injectable\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [NGXS_DEVTOOLS_OPTIONS]\n            }] }, { type: ɵngcc0.Injector }, { type: ɵngcc0.NgZone }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    NgxsReduxDevtoolsPlugin.prototype.devtoolsExtension;\n    /**\n     * @type {?}\n     * @private\n     */\n    NgxsReduxDevtoolsPlugin.prototype.globalDevtools;\n    /**\n     * @type {?}\n     * @private\n     */\n    NgxsReduxDevtoolsPlugin.prototype.unsubscribe;\n    /**\n     * @type {?}\n     * @private\n     */\n    NgxsReduxDevtoolsPlugin.prototype._options;\n    /**\n     * @type {?}\n     * @private\n     */\n    NgxsReduxDevtoolsPlugin.prototype._injector;\n    /**\n     * @type {?}\n     * @private\n     */\n    NgxsReduxDevtoolsPlugin.prototype._ngZone;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} options\n * @return {?}\n */\nfunction devtoolsOptionsFactory(options) {\n    return Object.assign({ name: 'NGXS' }, options);\n}\n/** @type {?} */\nconst USER_OPTIONS = new InjectionToken('USER_OPTIONS');\nclass NgxsReduxDevtoolsPluginModule {\n    /**\n     * @param {?=} options\n     * @return {?}\n     */\n    static forRoot(options) {\n        return {\n            ngModule: NgxsReduxDevtoolsPluginModule,\n            providers: [\n                {\n                    provide: NGXS_PLUGINS,\n                    useClass: NgxsReduxDevtoolsPlugin,\n                    multi: true\n                },\n                {\n                    provide: USER_OPTIONS,\n                    useValue: options\n                },\n                {\n                    provide: NGXS_DEVTOOLS_OPTIONS,\n                    useFactory: devtoolsOptionsFactory,\n                    deps: [USER_OPTIONS]\n                }\n            ]\n        };\n    }\n}\nNgxsReduxDevtoolsPluginModule.ɵfac = function NgxsReduxDevtoolsPluginModule_Factory(t) { return new (t || NgxsReduxDevtoolsPluginModule)(); };\nNgxsReduxDevtoolsPluginModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NgxsReduxDevtoolsPluginModule });\nNgxsReduxDevtoolsPluginModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgxsReduxDevtoolsPluginModule, [{\n        type: NgModule\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { NGXS_DEVTOOLS_OPTIONS, NgxsReduxDevtoolsPlugin, NgxsReduxDevtoolsPluginModule, devtoolsOptionsFactory as ɵa, USER_OPTIONS as ɵb };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}